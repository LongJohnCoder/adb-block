#!/bin/bash
get_packages() { adb shell pm list packages -e | sort -t";" -k2 | sed 's/package://g' | sed s/\\r\$// | sed 's/.*/& &/' | sed 's/$/ off/g'; }
os_version() { adb shell getprop ro.build.version.release | sed s/\\r\$//; }
select_packages_block() { dialog --checklist Packages 24 80 20 $(get_packages) 2>.packages; sed -e 's/\s\+/\n/g' -i .packages; sed -i -e '$a\' -i .packages; }
select_packages_unblock() { dialog --checklist Packages 24 80 20 $(cat .blocked_packages) 2>.delpack; sed -e 's/\s\+/\n/g' -i .delpack; sed -i -e '$a\' -i .delpack; }
check_file() { touch .blocked_packages; }
status_dialog_blocked() { dialog --msgbox "$(cat .status)" 24 80; }
status_dialog_unblocked() { dialog --msgbox "$(cat .status)" 24 80; }
disable_packages() {
    # can be done with xargs if you don't like this way
    while IFS= read -r package; do
	if [[ $(os_version) < 5 ]]; then
		adb shell pm block "$package"
		printf "$package $package off \n" >> .blocked_packages
	else
		adb shell pm clear "$package"
		adb shell pm hide "$package"
		printf "$package $package off \n" >> .blocked_packages
	fi
    done
}
enable_packages() {
    # can be done with xargs if you don't like this way
    while IFS= read -r package; do
	if [[ $(os_version) < 5 ]]; then
	        adb shell pm unblock "$package"
	        sed '/'$package'/d' -i .blocked_packages
	else
                adb shell pm unhide "$package"
                sed '/'$package'/d' -i .blocked_packages
	fi
    done
}
block() { 
	check_file
	select_packages_block
	cat .packages | disable_packages > .status
	status_dialog_blocked;
}
unblock() { 
	check_file
	select_packages_unblock
	cat .delpack | enable_packages > .status
	status_dialog_unblocked; 
}
dialog --menu "Would you like to block or unblock?" 24 80 24 "Block" "Block a package" "Unblock" "Unblock a package" 2>.answer
if [[ $(cat .answer) == "Block" ]];
then
	block
else
	unblock
fi
